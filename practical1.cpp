#include<iostream>
using namespace std;
int main()
{
	float y;
	int x,z;
	cout<<"Enter value of x and y";
	cin>>x>>z;
	y=(float)x/z;
	cout<<y;
	return 0;
}
						//Compilation Procedure//
				
	/*	Step 1: Preprocessor-The preprocessor takes the source code as an input, and it removes all the comments from the source code. The preprocessor takes the preprocessor directive and interprets it.
	
		Step 2: Compiler-It has 2 stages-1>Syntax Analysis
			In the syntax analysis phase, a compiler verifies whether or not the tokens generated by the lexical analyzer are grouped according to the syntactic rules of the language. ... It detects and reports any syntax errors and produces a parse tree from which intermediate code can be generate
										 2>Semantic Analysis
			Semantic analysis is the task of ensuring that the declarations and statements of a program are semantically correct, i.e, that their meaning is clear and consistent with the way in which control structures and data types are supposed to be used.
			
		Step 3:Assembler-Assembler converts the (.s) code which is generated by the compiler into (.obj) i.e object code which is actually the binary code and is machine readable.
			 
		Step 4:Linker-It's work is to add the library files so as the machine could know about everything written in the code.And gives the output.*/
			 
			 							 					
